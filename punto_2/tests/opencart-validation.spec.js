const { test, expect } = require('@playwright/test');

/**
 * Pruebas de validaci√≥n del formulario de registro de OpenCart
 * Estas pruebas verifican que el formulario no se env√≠e cuando faltan datos obligatorios
 */
test.describe('OpenCart - Validaciones de Formulario', () => {
  
  test('Formulario vac√≠o - Bot√≥n no debe navegar', async ({ page }) => {
    console.log('üîç Probando formulario vac√≠o...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    const initialUrl = page.url();
    console.log('üìç URL inicial:', initialUrl);
    
    // Intentar enviar formulario vac√≠o
    console.log('üö´ Enviando formulario vac√≠o...');
    await page.click('input[type="submit"][value="Continue"]');
    
    // Esperar un momento para ver si hay navegaci√≥n
    await page.waitForTimeout(3000);
    
    const finalUrl = page.url();
    console.log('üìç URL final:', finalUrl);
    
    // Verificar que no hubo navegaci√≥n
    expect(finalUrl).toBe(initialUrl);
    console.log('‚úÖ Formulario vac√≠o no naveg√≥ - Validaci√≥n funcionando');
  });

  test('Solo nombre - Bot√≥n no debe navegar', async ({ page }) => {
    console.log('üîç Probando solo con nombre...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    const initialUrl = page.url();
    console.log('üìç URL inicial:', initialUrl);
    
    // Llenar solo el nombre
    await page.fill('input[name="firstname"]', 'Juan');
    console.log('üìù Solo nombre llenado');
    
    // Intentar enviar
    await page.click('input[type="submit"][value="Continue"]');
    await page.waitForTimeout(3000);
    
    const finalUrl = page.url();
    console.log('üìç URL final:', finalUrl);
    
    // Verificar que no hubo navegaci√≥n
    expect(finalUrl).toBe(initialUrl);
    console.log('‚úÖ Solo nombre no naveg√≥ - Validaci√≥n funcionando');
  });

  test('Sin pol√≠tica de privacidad - Bot√≥n no debe navegar', async ({ page }) => {
    console.log('üîç Probando sin pol√≠tica de privacidad...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    const initialUrl = page.url();
    console.log('üìç URL inicial:', initialUrl);
    
    // Llenar todos los campos excepto pol√≠tica de privacidad
    await page.fill('input[name="firstname"]', 'Juan');
    await page.fill('input[name="lastname"]', 'P√©rez');
    await page.fill('input[name="email"]', 'test@example.com');
    await page.fill('input[name="telephone"]', '1234567890');
    await page.fill('input[name="password"]', 'TestPassword123!');
    await page.fill('input[name="confirm"]', 'TestPassword123!');
    await page.check('input[name="newsletter"][value="0"]');
    
    console.log('üìù Todos los campos llenados excepto pol√≠tica de privacidad');
    
    // Intentar enviar sin marcar pol√≠tica de privacidad
    await page.click('input[type="submit"][value="Continue"]');
    await page.waitForTimeout(3000);
    
    const finalUrl = page.url();
    console.log('üìç URL final:', finalUrl);
    
    // Verificar que no hubo navegaci√≥n
    expect(finalUrl).toBe(initialUrl);
    console.log('‚úÖ Sin pol√≠tica de privacidad no naveg√≥ - Validaci√≥n funcionando');
  });

  test('Contrase√±as diferentes - Bot√≥n no debe navegar', async ({ page }) => {
    console.log('üîç Probando contrase√±as diferentes...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    const initialUrl = page.url();
    console.log('üìç URL inicial:', initialUrl);
    
    // Llenar formulario con contrase√±as diferentes
    await page.fill('input[name="firstname"]', 'Juan');
    await page.fill('input[name="lastname"]', 'P√©rez');
    await page.fill('input[name="email"]', 'test@example.com');
    await page.fill('input[name="telephone"]', '1234567890');
    await page.fill('input[name="password"]', 'Password123');
    await page.fill('input[name="confirm"]', 'DifferentPassword123'); // Contrase√±a diferente
    await page.check('input[name="newsletter"][value="0"]');
    await page.check('input[name="agree"]');
    
    console.log('üìù Formulario llenado con contrase√±as diferentes');
    
    // Intentar enviar
    await page.click('input[type="submit"][value="Continue"]');
    await page.waitForTimeout(3000);
    
    const finalUrl = page.url();
    console.log('üìç URL final:', finalUrl);
    
    // Verificar que no hubo navegaci√≥n
    expect(finalUrl).toBe(initialUrl);
    console.log('‚úÖ Contrase√±as diferentes no naveg√≥ - Validaci√≥n funcionando');
  });

  test('Email inv√°lido - Bot√≥n no debe navegar', async ({ page }) => {
    console.log('üîç Probando email inv√°lido...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    const initialUrl = page.url();
    console.log('üìç URL inicial:', initialUrl);
    
    // Llenar formulario con email inv√°lido
    await page.fill('input[name="firstname"]', 'Juan');
    await page.fill('input[name="lastname"]', 'P√©rez');
    await page.fill('input[name="email"]', 'email-invalido-sin-arroba'); // Email inv√°lido
    await page.fill('input[name="telephone"]', '1234567890');
    await page.fill('input[name="password"]', 'TestPassword123!');
    await page.fill('input[name="confirm"]', 'TestPassword123!');
    await page.check('input[name="newsletter"][value="0"]');
    await page.check('input[name="agree"]');
    
    console.log('üìù Formulario llenado con email inv√°lido');
    
    // Intentar enviar
    await page.click('input[type="submit"][value="Continue"]');
    await page.waitForTimeout(3000);
    
    const finalUrl = page.url();
    console.log('üìç URL final:', finalUrl);
    
    // Verificar que no hubo navegaci√≥n
    expect(finalUrl).toBe(initialUrl);
    console.log('‚úÖ Email inv√°lido no naveg√≥ - Validaci√≥n funcionando');
  });

  test('Verificar que el bot√≥n est√° habilitado', async ({ page }) => {
    console.log('üîç Verificando que el bot√≥n Continue est√° habilitado...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    // Verificar que el bot√≥n existe y est√° habilitado
    const continueButton = await page.$('input[type="submit"][value="Continue"]');
    expect(continueButton).toBeTruthy();
    
    const isEnabled = await continueButton.isEnabled();
    expect(isEnabled).toBe(true);
    
    console.log('‚úÖ Bot√≥n Continue est√° presente y habilitado');
  });

  test('Verificar campos obligatorios est√°n presentes', async ({ page }) => {
    console.log('üîç Verificando campos obligatorios...');
    
    // Navegar al registro
    await page.goto('https://opencart.abstracta.us/');
    await page.click('a[title="My Account"]');
    await page.waitForSelector('a[href*="account/register"]', { timeout: 5000 });
    await page.click('a[href*="account/register"]');
    await page.waitForLoadState('networkidle');
    
    // Verificar que todos los campos obligatorios est√°n presentes
    const requiredFields = [
      'input[name="firstname"]',
      'input[name="lastname"]',
      'input[name="email"]',
      'input[name="telephone"]',
      'input[name="password"]',
      'input[name="confirm"]',
      'input[name="agree"]'
    ];
    
    for (const field of requiredFields) {
      const element = await page.$(field);
      expect(element).toBeTruthy();
      console.log(`‚úÖ Campo encontrado: ${field}`);
    }
    
    console.log('‚úÖ Todos los campos obligatorios est√°n presentes');
  });
});
